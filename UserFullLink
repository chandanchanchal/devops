https://eu-west-1.console.aws.amazon.com/lambda/home?region=eu-west-1#/begin

 LINUX / MAC
aws lambda invoke --function-name demo-lambda --cli-binary-format raw-in-base64-out --payload '{"key1": "value1", "key2": "value2", "key3": "value3" }' --invocation-type Event --region eu-west-1 response.json

# WINDOWS POWERSHELL
aws lambda invoke --function-name demo-lambda --cli-binary-format raw-in-base64-out --payload '{\"key1\": \"value1\", \"key2\": \"value2\", \"key3\": \"value3\" }' --invocation-type Event --region eu-west-1 response.json

# WINDOWS CMD
aws lambda invoke --function-name demo-lambda --cli-binary-format raw-in-base64-out --payload "{""key1"":""value1"",""key2"":""value2"",""key3"":""value3""}" --invocation-type Event --region eu-west-1 response.json


import json
 
def lambda_handler(event, context):
    print("value1 = "+ event['key1'])
    print("value2 = "+ event['key2'])
    print("value3 = "+ event['key3'])
    return event['key1']
    #raise Exception('something went wrong')
#################################################################################################################################################
import json
import logging

# Configure logging
logger = logging.getLogger()
logger.setLevel(logging.INFO)

def lambda_handler(event, context):
    """
    Lambda function to log the name of the file uploaded to an S3 bucket.

    :param event: S3 event triggering the Lambda function
    :param context: Lambda execution context
    """
    try:
        # Log the entire event for debugging purposes
        logger.info("Received event: %s", json.dumps(event, indent=2))

        # Extract bucket name and object key from the event
        bucket_name = event['Records'][0]['s3']['bucket']['name']
        object_key = event['Records'][0]['s3']['object']['key']

        # Log the bucket name and object key (file name)
        logger.info(f"File '{object_key}' uploaded to bucket '{bucket_name}'")
        
    except KeyError as e:
        logger.error(f"KeyError encountered: {e}")
        raise e

    return {
        'statusCode': 200,
        'body': json.dumps('File name logged successfully')
    }
