aws rds create-db-instance \
    --db-instance-identifier mydbinstance \
    --db-instance-class db.t3.micro \
    --engine mysql \
    --engine-version 8.0.39 \
    --allocated-storage 20 \
    --master-username admin \
    --master-user-password admin123 \
    --backup-retention-period 7 \
    --vpc-security-group-ids sg-021148299e8b65de5 \
    --availability-zone us-east-1a

aws rds describe-db-instances --db-instance-identifier mydbinstance


aws ec2 authorize-security-group-ingress \
    --group-id sg-xxxxxxxx \
    --protocol tcp \
    --port 3306 \
    --cidr 0.0.0.0/0



pip install pymysql




import pymysql

# Database connection parameters
endpoint = "mydbinstance.xxxxxx.us-east-1.rds.amazonaws.com"  # Replace with your endpoint
port = 3306
username = "admin"
password = "admin123"
database = "testdb"

# Connect to the RDS instance
try:
    connection = pymysql.connect(
        host=endpoint,
        user=username,
        password=password,
        database=database,
        port=port
    )
    print("Connection to RDS successful!")
    
    # Create a cursor object
    cursor = connection.cursor()

    # Create a table
    create_table_query = """
    CREATE TABLE IF NOT EXISTS users (
        id INT AUTO_INCREMENT PRIMARY KEY,
        name VARCHAR(100),
        email VARCHAR(100) UNIQUE
    );
    """
    cursor.execute(create_table_query)
    print("Table 'users' created successfully.")

    # Insert data
    insert_query = "INSERT INTO users (name, email) VALUES (%s, %s)"
    cursor.executemany(insert_query, [
        ("Alice", "alice@example.com"),
        ("Bob", "bob@example.com"),
    ])
    connection.commit()
    print("Data inserted successfully.")

    # Retrieve data
    select_query = "SELECT * FROM users;"
    cursor.execute(select_query)
    for row in cursor.fetchall():
        print(row)

except pymysql.MySQLError as e:
    print(f"Error connecting to RDS: {e}")
finally:
    if 'connection' in locals() and connection:
        connection.close()
        print("Connection closed.")














