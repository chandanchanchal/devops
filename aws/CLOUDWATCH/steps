Step 1: Accessing CloudWatch

Login to AWS Management Console:

Open the AWS Management Console.

Search for CloudWatch in the search bar and click the CloudWatch service.

Overview Page:

The CloudWatch dashboard provides an overview of metrics, alarms, and logs.

Familiarize yourself with the layout and sections such as "Metrics," "Logs," "Alarms," and "Dashboards."

Step 2: Monitoring Metrics

Navigate to Metrics:

Click on the "Metrics" tab from the CloudWatch dashboard.

Explore Available Metrics:

Choose a namespace, such as AWS/EC2 for instance-related metrics.

Select the resource to view metrics like CPUUtilization, DiskReadOps, etc.

Create a Custom Metric (Optional):

Use the AWS SDK, CLI, or API to publish custom metrics.

Example with AWS CLI:

aws cloudwatch put-metric-data \
  --metric-name CustomMetricName \
  --namespace CustomNamespace \
  --value 10

Step 3: Setting Alarms

Navigate to Alarms:

Click on "Alarms" in the navigation pane.

Create an Alarm:

Click "Create alarm."

Select a metric and define conditions (e.g., CPU utilization > 80%).

Set Actions:

Choose an action when the alarm state changes (e.g., send an email via Amazon SNS).

Review and Create:

Confirm the settings and create the alarm.

Step 4: Log Monitoring

Access Logs:

Navigate to "Logs" from the CloudWatch menu.

Create a Log Group:

Name the log group and configure retention settings.

Stream Logs:

Install the CloudWatch Agent on the server to send logs.

Example configuration for CloudWatch Agent:

{
  "logs": {
    "logs_collected": {
      "files": {
        "collect_list": [
          {
            "file_path": "/var/log/system.log",
            "log_group_name": "SystemLogGroup",
            "log_stream_name": "InstanceID"
          }
        ]
      }
    }
  }
}

Query Logs:

Use the "Log Insights" feature to analyze logs with queries.

Example query to find errors:

fields @timestamp, @message
| filter @message like /error/
| sort @timestamp desc

Step 5: Dashboards

Create a Dashboard:

Click on "Dashboards" and then "Create dashboard."

Name the dashboard and add widgets.

Add Widgets:

Select the type of visualization (e.g., Line graph, Number, Text).

Choose metrics or logs to display in the widget.

Customize and Save:

Adjust widget settings like time ranges.

Save the dashboard for future use.

Step 6: CloudWatch Events

Navigate to Events:

Access the "Events" section (now called EventBridge).

Create a Rule:

Define event patterns or schedules.

Example: Trigger an event when an EC2 instance state changes.

Set Targets:

Choose targets like AWS Lambda functions, Step Functions, or SNS topics.

Review and Create:

Confirm configurations and create the rule.

Best Practices

Optimize Retention Policies:

Set appropriate retention periods for logs to minimize costs.

Use Tags:

Tag resources to organize and filter metrics easily.

Enable Detailed Monitoring:

Enable detailed monitoring for critical resources to get data at a one-minute granularity.

Automate Alerts:

Integrate CloudWatch with AWS Lambda or SNS for automated responses to alarms.
